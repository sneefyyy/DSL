{"index": 0, "prompt_snippet": "Task: FloodFill\n\nTraining Example 1:\nInput: [[3, 3, 7, 7, 7], [3, 3, 7, 7, 7], [3, 3, 7, 7, 7], [3, 3, 7, 7, 7], [3, 3, 7, 7, 7]]\nOutput: [[8, 8, 7, 7, 7], [8, 8, 7, 7, 7], [8, 8, 7, 7, 7], [8, 8, 7, 7, 7], [8, 8, 7, 7, 7]]\n\nTraining Example 2:\nInput: [[3, 3, 3, 1, 1], [3, 3, 3, 1, 1], [3, 3, 8, 8, 8], [3, 3, 8, 8, 8], [3, 3, 8, 8, 8]]\nOutput: [[8, 8, 8, 1, 1], [8, 8, 8, 1, 1], [8, 8, 8, 8, 8], [8, 8, 8, 8, 8], [8, 8, 8, 8, 8]]\n\nTest Input: [[3, 3, 3, 4, 4], [3, 3, 3, 4, 4], [3, 3, 8, 8, 8], [3,", "test_input": [[3, 3, 3, 4, 4], [3, 3, 3, 4, 4], [3, 3, 8, 8, 8], [3, 3, 8, 8, 8], [3, 3, 8, 8, 8]], "ground_truth": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 8)", "candidates": [{"candidate": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 1)", "exact_match": false, "functional": false, "computed_output": [[1, 1, 1, 4, 4], [1, 1, 1, 4, 4], [1, 1, 8, 8, 8], [1, 1, 8, 8, 8], [1, 1, 8, 8, 8]], "exec_error": null}, {"candidate": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 2)", "exact_match": false, "functional": false, "computed_output": [[2, 2, 2, 4, 4], [2, 2, 2, 4, 4], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8]], "exec_error": null}, {"candidate": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 2)", "exact_match": false, "functional": false, "computed_output": [[2, 2, 2, 4, 4], [2, 2, 2, 4, 4], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8]], "exec_error": null}, {"candidate": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 2)", "exact_match": false, "functional": false, "computed_output": [[2, 2, 2, 4, 4], [2, 2, 2, 4, 4], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8]], "exec_error": null}, {"candidate": "output_grid = FloodFillGenerator.flood_fill(test_input, (0, 0), 2)", "exact_match": false, "functional": false, "computed_output": [[2, 2, 2, 4, 4], [2, 2, 2, 4, 4], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8], [2, 2, 8, 8, 8]], "exec_error": null}], "any_exact": false, "any_functional": false, "num_return_sequences": 5}
{"index": 1, "prompt_snippet": "Task: RepeatPattern\n\nTraining Example 1:\nInput: [[1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [0, 0, 0, 0, 0]]\n\nTraining Example 2:\nInput: [[9, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[9, 9, 9, 9, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\nTest Input: [[3, 0, 0, 0, 0], [3, 0, 0, 0, 0], [0, 0, 0, 0, 0],", "test_input": [[3, 0, 0, 0, 0], [3, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "ground_truth": "output_grid = RepeatPatternGenerator.repeat_horizontal(test_input, 4)", "candidates": [{"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [3, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [3, 3, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 2, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 3, 0, 0], [0, 0, 3, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 1, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 3, 3, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 2, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 3, 0, 0], [0, 0, 3, 0, 0]], "exec_error": null}], "any_exact": false, "any_functional": false, "num_return_sequences": 5}
{"index": 2, "prompt_snippet": "Task: MoveShape\n\nTraining Example 1:\nInput: [[7, 7, 7, 0, 0], [0, 7, 7, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[0, 0, 0, 0, 0], [0, 0, 7, 7, 7], [0, 0, 0, 7, 7], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\nTraining Example 2:\nInput: [[0, 0, 0, 0, 0], [7, 7, 0, 0, 0], [7, 7, 0, 0, 0], [0, 7, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 7, 7, 0], [0, 0, 7, 7, 0], [0, 0, 0, 7, 0]]\n\nTest Input: [[0, 0, 3, 0, 0], [0, 0, 3, 0, 0], [0, 0, 0, 0, 0], [0,", "test_input": [[0, 0, 3, 0, 0], [0, 0, 3, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "ground_truth": "shape_coords, value = MoveShapeGenerator.detect_shape_at_center(test_input, 0, 2)\noutput_grid = MoveShapeGenerator.move_shape(test_input, 0, 2, 1, 2)", "candidates": [{"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [3, 3, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [3, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 3, 2, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 3], [0, 0, 0, 0, 3]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 2, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 3, 0, 0], [0, 0, 3, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [3, 3, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}], "any_exact": false, "any_functional": false, "num_return_sequences": 5}
{"index": 3, "prompt_snippet": "Task: RepeatPattern\n\nTraining Example 1:\nInput: [[0, 0, 0, 0, 0], [0, 7, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[7, 7, 7, 7, 7], [7, 7, 7, 7, 7], [7, 7, 7, 7, 7], [7, 7, 7, 7, 7], [7, 7, 7, 7, 7]]\n\nTraining Example 2:\nInput: [[0, 0, 0, 0, 0], [5, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5]]\n\nTest Input: [[0, 0, 0, 0, 0], [9, 0, 0, 0, 0], [0, 0, 0, 0, 0],", "test_input": [[0, 0, 0, 0, 0], [9, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "ground_truth": "output_grid = RepeatPatternGenerator.tile_pattern(test_input)", "candidates": [{"candidate": "output_grid = RepeatPatternGenerator.repeat_horizontal(test_input, 5)", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [9, 9, 9, 9, 9], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RepeatPatternGenerator.repeat_horizontal(test_input, 5)", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [9, 9, 9, 9, 9], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RepeatPatternGenerator.repeat_vertical(test_input, 5)", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [9, 0, 0, 0, 0], [9, 0, 0, 0, 0], [9, 0, 0, 0, 0], [9, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RepeatPatternGenerator.repeat_horizontal(test_input, 5)", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [9, 9, 9, 9, 9], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RepeatPatternGenerator.repeat_horizontal(test_input, 5)", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [9, 9, 9, 9, 9], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}], "any_exact": false, "any_functional": false, "num_return_sequences": 5}
{"index": 4, "prompt_snippet": "Task: Connect\n\nTraining Example 1:\nInput: [[0, 0, 0, 0, 0], [5, 0, 0, 0, 0], [0, 0, 0, 0, 0], [5, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[0, 0, 0, 0, 0], [5, 0, 0, 0, 0], [5, 0, 0, 0, 0], [5, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\nTraining Example 2:\nInput: [[0, 0, 0, 7, 0], [0, 0, 7, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\nOutput: [[0, 0, 0, 7, 0], [0, 0, 7, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\nTest Input: [[0, 0, 0, 0, 0], [8, 0, 0, 0, 0], [0, 0, 0, 0, 0], [8, 0", "test_input": [[0, 0, 0, 0, 0], [8, 0, 0, 0, 0], [0, 0, 0, 0, 0], [8, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "ground_truth": "output_grid = ConnectGenerator.connect(test_input, (3, 0), (1, 0), 8)", "candidates": [{"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 1, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 8, 0, 8, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 3, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [8, 0, 8, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 1, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [8, 0, 8, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 1, 2, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 0, 0, 0, 0], [0, 0, 8, 0, 0], [0, 0, 0, 0, 0], [0, 0, 8, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}, {"candidate": "output_grid = RotateShapeGenerator.rotate_shape_on_grid(test_input, 2, 2, 1, 'clockwise')", "exact_match": false, "functional": false, "computed_output": [[0, 8, 0, 8, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "exec_error": null}], "any_exact": false, "any_functional": false, "num_return_sequences": 5}
